/* Importando uma fonte no Google Fonts */

@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');
/*Definindo variáveis, propriedades CSS que vão se repetindo durante os estilos*/

/*Escopo raiz :root*/

:root {
    --primary-color: #149397;
    --secondary-color: #136366;
    --dark-color: #002240;
    --light-color: #f4f4f4;
    --success-color: #5cb85c;
    --error-color: #d9534f;
}

/* Reset */

* {
    /*Reseta tudo!*/
    box-sizing: border-box;
    /*Permite adicionar padding e border etc sem se preocupar com o width de elementos*/
    padding: 0;
    margin: 0;
}

/* Configurações gerais */

body {
    font-family: 'Lato', sans-serif;
    color: #333;
    line-height: 1.6;
    /*Separar um pouco as coisas*/
}

ul {
    list-style-type: none;
}

a {
    text-decoration: none;
    /* Tirar o underline dos links */
    color: #333;
}

h1, h2 {
    font-weight: 300;
    /* Não tão negrito... */
    line-height: 1.2;
    margin: 10px 0;
    /* top e bottom 10, left e right 0*/
}

p {
    margin: 10px 0;
    /* Separar um pouco os parágrafos */
}

img {
    width: 100%;
    /*Para as imagens todas ocuparem todo o espaço (100%) no container que ela está inserida. */
}

code, pre {
    background-color: #333;
    color: #fff;
    padding: 10px;
}

.hidden {
    visibility: hidden;
    height: 0; /* Para não ocupar espaço*/
}


/*  Navbar */

.navbar {
    background-color: var(--primary-color);
    color: #fff;
    height: 70px;
    /* Altura da Navbar */
}

.navbar ul {
    display: flex;
    /* Ativa flexbox na lista e os li do menu viram flexitens, ficando horizontais*/
}

.navbar a {
    color: #fff;
    padding: 10px;
    margin: 0 5px;
}

.navbar a:hover {
    border-bottom: 2px #fff solid;
}

.navbar .flex {
    /* Se a classe flex está na classe .navbar  */
    justify-content: space-between;
    /* Coloca o espaço 'sobrando' entre os flexitem, alinhando eles nos cantos.. */
}

/* Showcase */

.showcase {
    height: 400px;
    background-color: var(--primary-color);
    color: #fff;
    position: relative;
    /*Se precisar posicionar algo de forma absoluta, é possível dentro do container com a classe showcase.*/
}

.showcase h1 {
    font-size: 40px;
}

.showcase p {
    margin: 20px 0;
    /* Espaço maior que o definido no geral */
}

.showcase .grid {
    overflow: visible;
    /* Para remover a scrollbar gerada e deixar o conteúdo visível, dando um efeitinho legal.*/
    grid-template-columns: 55% 45%;
    /*Personalizando especificamente o sistema de grid para o showcase*/
    gap: 30px;
    /*Aumentar também o espaçamento.*/
}

.showcase-text {
    animation: slideInFromLeft 1s ease-in;
}

/* Personalizando o form */

.showcase-form {
    position: relative;
    /*Propriedade para poder usar top, bottom, left e right para posicionar.*/
    top: 60px;
    height: 350px;
    width: 400px;
    padding: 40px;
    z-index: 100;
    justify-self: flex-end;
    /* Para puxar o form para a direita*/
    animation: slideInFromRight 1s ease-in;
}

.showcase-form .form-control {
    margin: 30px 0;
}

/* Os inputs dentro do formulário.*/

.showcase-form input[type='text'], .showcase-form input[type='email'] {
    border: 0;
    border-bottom: 1px solid #b4becb;
    width: 100%;
    padding: 3px;
    font-size: 16px;
}

.showcase-form input:focus {
    outline: none;
    /*Remover a linha que fica ao redor do input ao clicar*/
}

/* Definido uma inclinação*/

.showcase::before, .showcase::after {
    content: '';
    /*É preciso definir um conteúdo, nem que seja vazio*/
    position: absolute;
    height: 100px;
    /* Como definimos position: absolute;, podemos usar top, bottom, left e right*/
    bottom: -70px;
    right: 0;
    left: 0;
    background: #fff;
    /*Adicionar uma inclinação com transform*/
    /*Poderia usar scale, rotate, position, translate, skew */
    transform: skewY(-2deg);
    /* Para funcionar em mais browsers: prefix's*/
    -webkit-transform: skewY(-2deg);
    -moz-transform: skewY(-2deg);
    -ms-transform: skewY(-2deg);
}

/* Stats */

.stats {
    padding-top: 100px;
    animation: slideInFromBottom 1s ease-in;
}

.stats-heading {
    max-width: 500px;
    /* Para 'espremer' ele dentro do container que está inserido*/
    margin: auto;
    /*E agora, centralizar o texto!*/
}

.stats .grid h3 {
    font-size: 35px;
}

.stats .grid p {
    font-size: 20px;
    font-weight: bold;
}

/* Cli */

.cli .grid {
    grid-template-columns: repeat(3, 1fr);
    /* 3 Colunas, uma fração para cada*/
    grid-template-rows: repeat(2, 1fr);
    /* Define as linhas do grid, no caso, 2 rows*/
}

.cli .grid>*:first-child {
    /*Dentro do .cli .grid qualquer (*) elemento que seja o primeiro filho da div, nesse caso, a imagem*/
    grid-column: 1 / span 2;
    /*Na coluna 1 do grid, span 2, ocupa 2 colunas!!*/
    grid-row: 1 / span 2;
    /*Da linha 1, para a 2, 2 linhas ocupadas!!*/
}

/* Cloud */

.cloud .grid {
    grid-template-columns: 4fr 3fr;
    /*Organizando as colunas para cada elemento no grid, 4 para o texto e informações como o link e 3 para a imagem...*/
}

/* Languages */

.languages .flex {
    flex-wrap: wrap;
    /*Para os cartões quebrar a linha e se organizarem automaticamente*/
}

.languages .card {
    text-align: center;
    margin: 18px 10px 40px;
    transition: transform 0.2s ease-in;
    /*Para deixar mais suave, alteramos a velocidade da propriedade transform*/
}

.languages .card h4 {
    font-size: 20px;
    margin-bottom: 10px;
}

.languages .card:hover {
    transform: translateY(-15px);
    /*Move pelo eixo Y*/
}

/* Features */

.features-head img, .docs-head img {
    width: 200px;
    justify-self: flex-end;
    /* Para colocar a imagem que está inserida em um grid layout no canto direito.*/
}

.features-sub-head img {
    width: 300px;
    justify-self: flex-end;
}

.features-main .card>i {
    /* O primeiro ícone dentro do card (elemento filho) */
    margin-right: 20px;
}

.features-main .grid {
    padding: 30px;
}

/* Ajustando as colunas para encaixar o layout de grid nas features.*/

.features-main .grid>*:first-child {
    /*Primeiro elemento no grid*/
    grid-column: 1 / span 3; /* Esticar o primeiro elemento para três colunas a partir da primeira.*/
}

.features-main .grid>*:nth-child(2) { /* Mesma coisa, só que pega o número que quiser, nesse caso, o segundo!*/
    grid-column: 1 / span 2; /* Esticar o segundo elemento para 2 colunas a partir da primeira.*/
}

/* Docs */

.docs-main h3 {
    margin: 20px 0;
}

.docs-main .grid {
    grid-template-columns: 1fr 2fr; /* Ajustando os tamanhos dos griditens*/
    align-items: flex-start; /*Alinhar os itens para cima! Eixo Y pois é uma row*/
    /*align-items: flex-end; /* Para alinhar pra baixo.*/
}

.docs-main nav li {
    font-size: 17px;
    padding-bottom: 5px;
    margin-bottom: 5px;
    border-bottom: 1px #ccc solid;
}

.docs-main a:hover {
    font-weight: bold;
}

/* Footer */

.footer .social a {
    margin: 0 10px;
}

/* Animations */
/* Deslizar conteúdo */
@keyframes slideInFromLeft {
    0% {
        transform: translateX(-100%); /* Começa do lado de fora da tela */
    }

    100% {
        transform: translateX(0);/* Posição normal */
    }
}

@keyframes slideInFromRight {
    0% {
        transform: translateX(100%); /* Da direita pra esquerda */
    }

    100% {
        transform: translateX(0);/* Posição normal */
    }
}

@keyframes slideInFromTop {
    0% {
        transform: translateY(-100%); /* De cima para baixo*/
    }

    100% {
        transform: translateX(0);/* Posição normal */
    }
}

@keyframes slideInFromBottom {
    0% {
        transform: translateY(100%); /* De baixo para cima */
    }

    100% {
        transform: translateX(0);/* Posição normal */
    }
}

/* Media Query -> Responsividade. Abaixo dos pixels informados, altera as propriedades definidas.*/

/* Tablets e abaixo */

@media(max-width: 768px) {
    /*Empilhando tudo.
    Uma ÚNICA coluna */
    .grid, .showcase .grid, .stats .grid, .cli .grid, .cloud .grid, .features-main .grid, .docs-main .grid  {
        grid-template-columns: 1fr;
        /* Coluna única */
        grid-template-rows: 1fr;
        /*Linha única pois em Cli tem duas linhas (rows)*/
    }
    .showcase {
        height: auto;
        /*Pega a altura do container*/
    }
    .showcase-text {
        text-align: center;
        margin-top: 40px;
        animation: slideInFromTop 1s ease-in;
    }
    .showcase-form {
        justify-self: center;
        /* coloca em um flexitem ou griditem para justificar e posicionar apenas daquele item */
        margin: auto;
        animation: slideInFromBottom 1s ease-in;
    }
    .cli .grid>*:first-child {
        grid-column: 1;
        /*Remove o span de 2 colunas, assim mantendo uma ÚNICA*/
        grid-row: 1;
    }

    .features-head, .features-sub-head, .docs-head {
        text-align: center;
    }

    .features-head img, .features-sub-head img, .docs-head img {
        justify-self: center;/*Centralizar a imagem*/
    }

    /* Ajustar o grid para os griditens ficar em coluna.*/
    .features-main .grid > *:first-child,
    .features-main .grid > *:nth-child(2) {
        grid-column: 1;
    }
}

/* Mobile */

@media(max-width: 500px) {
    .navbar {
        height: 110px;
        /* Colocar os itens de menu abaixo do logo. Mais espaço para os menu itens*/
        /*Poderia adicionar um menu hamburguer aqui...*/
    }
    .navbar .flex {
        flex-direction: column;
        /* Por padrão é row, altera para column*/
        /*Assim, o logo fica acima dos itens do menu.*/
    }
    .navbar ul {
        padding: 10px;
        background-color: rgba(0, 0, 0, 0.1);
    }
    /*Telas realmente pequenas */
    .showcase-form {
        width: 300px;
    }
}
